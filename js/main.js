// Generated by CoffeeScript 1.6.2
(function() {
  window.requestAnimFrame = (function(){
      return  window.requestAnimationFrame       || 
              window.webkitRequestAnimationFrame || 
              window.mozRequestAnimationFrame    || 
              window.oRequestAnimationFrame      || 
              window.msRequestAnimationFrame     || 
              function(/* function */ callback, /* DOMElement */ element){
                window.setTimeout(callback, 1000 / 60);
              };
    })();
;
  var $cover, $fire, $water, bottom, currBottom, currTop, dir1, dir2, main, step, step1, stepCount, top, vector1, vector2, waterHeight, waterY,
    _this = this;

  main = {
    init: function() {
      this.fire = this.$('fire-boiling');
      this.cover = this.$('cover-boiling');
      this.water = this.$('water-boiling');
      this.waterHeight = parseInt(this.water.getAttribute('height'), 10) + .75;
      this.waterY = parseInt(this.water.getAttribute('y'), 10);
      this.fireVariables();
      return this.animationLoop(null, this);
    },
    fireVariables: function() {
      var stepCount, vector;

      this.top = 30.808;
      this.bottom = 27.988;
      vector = this.top - this.bottom;
      stepCount = 8;
      this.step = vector / stepCount;
      this.currTop = this.bottom;
      this.currBottom = this.top;
      this.direction1 = false;
      return this.direction2 = false;
    },
    $: function(id) {
      return document.getElementById(id);
    },
    getRand: function(min, max) {
      return Math.floor((Math.random() * ((max + 1) - min)) + min);
    },
    animateFire: function() {
      if (!this.direction1) {
        if (this.currTop <= this.top) {
          this.currTop += this.step;
        } else {
          this.direction1 = true;
        }
      } else {
        if (this.currTop >= this.bottom) {
          this.currTop -= this.step;
        } else {
          this.direction1 = false;
        }
      }
      if (!this.direction2) {
        if (this.currBottom >= this.bottom) {
          this.currBottom -= this.step;
        } else {
          this.direction2 = true;
        }
      } else {
        if (this.currBottom <= this.top) {
          this.currBottom += this.step;
        } else {
          this.direction2 = false;
        }
      }
      return this.fire.setAttribute('points', "23," + (this.top - 1) + " \n21.804," + this.currTop + "\n18.985," + this.currBottom + "\n16.134," + this.currTop + "\n13.284," + this.currBottom + "\n10.404," + this.currTop + "\n9," + (this.top - 1) + "\n");
    },
    animate: function() {
      return this.animateFire();
    },
    animationLoop: function(time) {
      this.animate();
      return requestAnimFrame(this.animationLoop.bind(this));
    }
  };

  main.init();

  $fire = $('#fire-path');

  $cover = $('#cover');

  $water = $('#water');

  waterHeight = parseInt($water.attr('height'), 10) + .75;

  waterY = parseInt($water.attr('y'), 10);

  step = .05;

  setInterval(function() {
    waterHeight = waterHeight - step;
    waterY = waterY + step;
    $water.attr('y', waterY);
    return $water.attr('height', waterHeight);
  }, 20);

  top = 30.808;

  bottom = 27.988;

  vector1 = top - bottom;

  vector2 = bottom - top;

  stepCount = 20;

  step1 = vector1 / stepCount;

  dir1 = false;

  dir2 = false;

  currTop = bottom;

  currBottom = top;

  setInterval(function() {
    if (!dir1) {
      if (currTop <= top) {
        currTop += step1;
      } else {
        dir1 = true;
      }
    } else {
      if (currTop >= bottom) {
        currTop -= step1;
      } else {
        dir1 = false;
      }
    }
    if (!dir2) {
      if (currBottom >= bottom) {
        currBottom -= step1;
      } else {
        dir2 = true;
      }
    } else {
      if (currBottom <= top) {
        currBottom += step1;
      } else {
        dir2 = false;
      }
    }
    return $fire.attr('points', "23," + (top - 1) + " \n21.804," + currTop + "\n18.985," + currBottom + "\n16.134," + currTop + "\n13.284," + currBottom + "\n10.404," + currTop + "\n9," + (top - 1) + "\n");
  }, 2);

  setInterval(function() {
    return $cover.attr('transform', "rotate(" + (main.getRand(-4, 4)) + ",16,2)");
  }, 20);

}).call(this);
